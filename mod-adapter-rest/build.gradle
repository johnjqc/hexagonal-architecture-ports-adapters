
plugins {
    id 'java'

    id 'org.springframework.boot'
    id 'io.spring.dependency-management'

    id "org.openapi.generator" version "4.3.1"
}
bootJar {
    enabled = false
}
jar {
    enabled = true
}
dependencies {

    compile project (':mod-core')

    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'io.springfox:springfox-swagger2:2.7.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/mod-adapter-rest/src/main/resources/api.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.jsoft.infraestructure.adapter.in.rest.api"
    modelPackage = "com.jsoft.infraestructure.adapter.in.rest.model"
    additionalProperties= [
            responseEntity: "true"
    ]
    configOptions = [
            dateLibrary: "java8",
            interfaceOnly: "true",
            implicitHeaders: "true",
            serializableModel: "true",
            skipDefaultInterface: "true",
            performBeanValidation: "true",
    ]
}

compileJava.dependsOn 'openApiGenerate'

sourceSets.main.java.srcDirs 'build/generated/src/main/java'
sourceSets.main.java.srcDirs 'src/main/java'
